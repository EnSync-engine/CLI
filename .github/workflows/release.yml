name: Release

on:
  push:
    branches:
      - main

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23.2'

      - name: Initialize Go Module
        run: |
          if [ ! -f go.mod ]; then
              go mod init $(basename $GITHUB_REPOSITORY)
              go mod tidy
            fi
  
      - name: List files
        run: ls -al

      - name: Run Tests
        run: go test -v -race ./...

      - name: Determine Next Version
        id: next_version
        run: |
          # Get the latest tag or fallback to v1.0.0
          latest_tag=$(git describe --tags --abbrev=0 2>/dev/null || echo "v1.0.0")
          
          # Extract the major, minor, and patch versions
          major=$(echo $latest_tag | cut -d. -f1 | sed 's/v//')
          minor=$(echo $latest_tag | cut -d. -f2)
          patch=$(echo $latest_tag | cut -d. -f3)
          
          # Increment the patch version
          next_patch=$((patch + 1))
          
          # Construct the new version tag
          next_version="v${major}.${minor}.${next_patch}"
          echo "Next version: $next_version"
          echo "next_version=$next_version" >> $GITHUB_ENV

      - name: Create and Push Tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git tag ${{ env.next_version }}
          git push origin ${{ env.next_version }}

      - name: Install GoReleaser
        uses: goreleaser/goreleaser-action@v5
        with:
          version: v1.16.0
          install-only: true
  
      - name: Run GoReleaser
        run: goreleaser release --clean
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
